import { Behavior } from "../Scene/Behavior.ts";
import Rapier from "@dimforge/rapier3d-compat";
import { Vector3Like } from "../Math/Vectors.ts";
export declare class RigidBodyBehavior extends Behavior {
    type: string;
    handle?: number;
    get rBody(): Rapier.RigidBody | undefined;
    rbodyType: Rapier.RigidBodyType;
    rbodyDescription: Rapier.RigidBodyDesc;
    get mass(): number;
    get linvel(): Rapier.Vector;
    get angvel(): Rapier.Vector;
    get linDamping(): number;
    get angDamping(): number;
    get ccdEnabled(): boolean;
    constructor(args: {
        type: Rapier.RigidBodyType;
    });
    onEnterScene(): void;
    setAdditionalMass(mass: number): void;
    setLinearVelocity(velocity: Vector3Like): void;
    setAngularVelocity(velocity: Vector3Like): void;
    setLinearDamping(damping: number): void;
    setAngularDamping(damping: number): void;
    resetForces(): void;
    resetTorques(): void;
    addForce(force: Vector3Like): void;
    addTorque(torque: Vector3Like): void;
    applyTorqueImpulse(impulse: Vector3Like): void;
    addForceAtPoint(force: Vector3Like, point: Vector3Like): void;
    applyImpulse(impulse: Vector3Like): void;
    applyImpulseAtPoint(impulse: Vector3Like, point: Vector3Like): void;
    lockTranslation(x: boolean, y: boolean, z: boolean): void;
    lockRotation(x: boolean, y: boolean, z: boolean): void;
    enableContinuousCollisionDetection(cond: boolean): void;
    onLeaveScene(): void;
    private forceToApply;
    private torqueToApply;
    private impulseToApply;
}
